pCombine documentation:1 Requirements	12 Input files	13 Options	14 Usage	25 Results	26  Benchmarking and Testing	37 Input File Examples	31 RequirementspCombine has been tested on MAC OSX, LINUX and Windows environments with Python 2.7.3 installed as the default python installation. pCombine also requires the python packages numpy and scipy to be installed and accessible by your default python package.Note for Cardiff users: pCombine has been tested on Raven (use ‘module load python/2.7.3’ all required packages are installed by default)2 Input filesThe Input files for pCombine are very similar to input and output files you use and get from plink. Association Results File [--assocfile]This file MUST have columns named ‘SNP’ , ‘P’, along with ‘CHR’, and ‘BP’. If you are running a gene based test (either all genes, or a set of genes  [see set files below], then this file must also be annotated with a column called ‘ANNOT’. Plink’s default format for the annotation column is the gene name and then the distance in Kb up or downstream of the gene, or 0 if in the gene. If the SNP is not in a gene, then a ‘.’ is used. At present this is the only annotation format that pCombine can parse.  See the plink documentation for more details on how to annotate your results. See Examples below.Genetic Data For estimation of LD File [--bfile]These files are provided in the standard plink binard ped (bed), bim and fam file formats. No modifications to these files are necessary.Sets File [--setsfile]The sets file describes the sets of SNPs or genes that you want to test. There are two accepted formats for the sets file, and both are assumed to tab separated, and it is critical that both have headers. The first format accepted is that of SET_NAME is the first column and SNP is the second. The header must be SET_NAME, SNP. The second format is SET_NAME,  GENE, where GENE are the identifiers used to annotate your association results file. These will be converted by pCombine to sets of SNPs using the annotations, and if your set file has the header SET_NAME GENE and your association file does NOT have an ANNOT column, then the pCombine will exit. NOTE: To run an all genes gene-wide only analysis simply leave the ‘—setsfile SETSFILE’ argument out. See examplese below. NOTE: pCombine will not calculate correlation coefficients between markers on different chromosomes. It treats them as 0.3 OptionsThere are only two options to pCombine, the lambda correction, and the output file name. Genomic Control Lambda Correction By default, pCombine assumes the p-values in your association results file ARE NOT CORRECTED. There is no option to turn the lambda correction off, however both the uncorrected and corrected results are output in results file.  User specified Genomic Control Lambda [--my-lambda]The my-lambda option allows a user to specify a different lambda than the one calculated from the P-values in the association results file. Output File Name [--out] If no output file name is provided the output is called pCombine.output. If there are snps that are in the provided sets or in genes that are in the association results file, that are not found in the genetic data files, then a further file is outputted, called pCombine.output_missingSNPs. If you provide your own file name, the ‘_missingSNPs’ will be appended onto the end of that file name. It is simply a 1 SNP per row list of SNPs that were present in the association results file, that was not found in the  genetic data files. PLEASE NOTE: all SNP matching by pCombine is done solely on the basis of the SNP name. If the names of your snps are different between the bim file, and the association results file, then they will be reported as missing even if they occupy the same chr and bp. This is due to ease of implementation, however it is fairly easy to update that names of your snps in the bim file, with the names of your snps from the association results files.  See the plink documentation for more details. 4 Usagepython pCombine.py --helpusage: pCombine.py [-h] 		[--bfile PLINKFILENAME] 		[--setsfile SETSFILENAME]		[--assocfile RESULTSFILENAME] 		[--my-lambda MYLAMBDA]	            [--out OUTPUTFILENAME]Combining P-values based on LDoptional arguments:  -h, --help            show this help message and exit  --bfile PLINKFILENAME                        plink bed bim fam files  --setsfile SETSFILENAME                        File defining SNPsets. Can accept one of two formats:                        1) Two tab delimited columns, SET_NAME, SNP_NAME. 2)                        Two tab delimited columns, SET_NAME, GENE_NAME. If                        using format 2, the association results file must also                        contain gene names as annotated by plink  --assocfile RESULTSFILENAME                        SNP association results file. Plink results file                        format is the accepted format.  --my-lambda MYLAMBDA  Can provide own lambda correction.  --out OUTPUTFILENAME  The output file name.5 ResultsThe ouput filename is either ‘pCombine.output’ by default, or whatever the user provides. The format is as follows, tab-delimited, with a header naming the columns as below.* Set – The name of the set or gene tested* nSNPs – the number of SNPs that were combined to produce the combined P-value* nSNPsMissing – the number of SNPs that were in the association results file but not in the        plink bim file* nSNPsExtra – the number of SNPs that were provided in the set that weren’t found in the association results file* BestP – the best P-value of all SNPs tested in the gene* BestP_ID, bestP_CHR bestP_BP – The ID and coordinates from the best SNP* BestAdjP BestAdjP_ID bestAdjP_CHR, bestAdjP_BP – same as the above 4 fields but after lambda correction* nP05 – number of SNPs in set that had a P-value less than or equal to 0.05* nAdjP05  – number of SNPs in set that had a GC corrected P-value less than or equal to 0.05* BrownsP – combined P-value* AdjBrownsP – combined P-value using GC corrected P-values* SimesP – combined P-value using simes Method* AdjSimesP – combine P-value using simes Method and GC corrected P-values.6  Benchmarking and TestingpCombine is calculating all non-reciprocal pairs of SNPs in the sets that are provided to it.  The time it takes to Read large sets of SNPs’ genetic data is negligible to the amount of time it takes to calculate correlation, but memory constraints should be ignored either.  pCombine has been test on various platforms and runs well for even large numbers of small sets – a whole genome worth of gene-wide tests takes ~ 3 minutes, when using the 183 CEU and TSI individuals as the reference data.However for large sets the calculation time scales slightly worse than linear as shown below. 7 Input File ExamplesAssociation Result File examplehead chr22_test.annotCHR      SNP 		 BP 	       A1  F_A          F_U      A2     CHISQ      P                OR            ANNOT22   	rs142324053	16053001   4  0.08824  0.1378    1     2.198       0.1382        0.6057  CECR1(0)22   	rs117246541 16055122   4  0.1118    0.08163  3     0.9558     0.3283       1.416     CECR1(0)22    	rs62224618   16057417   4  0.1235    0.07653  2     2.267       0.1321       1.701     CECR1(0)22   	rs141208996 16067555   3  0.1765    0.2806    1     5.537       0.01861     0.5494   CECR1(0)22   	rs115879525 16250859   1  0.1588    0.1122    2     1.703       0.1919       1.493      .22    	rs75783648  	16265053   2  0.4824    0.4235    4     1.275       0.2588       1.269      .22   	rs114934259 16289328   1  0.04118  0.07653  3     2.014       0.1558       0.5182   .22	rs5771604   	16364923   1	0.3353    0.4133    2     2.356       0.1248       0.7162   CECR2(0)Set File Example (with SNPs)head testSets_bySNPName_small.txt SET_NAME	SNPSET1	rs142324053SET1	rs117246541SET1	rs62224618SET1	rs141208996SET1	rs115879525SET1	rs75783648SET1	rs114934259SET1	rs5771604SET1	rs115260912Set File Example (with Genes)head testSets_byGeneName.txt SET_NAME	GENEGENESET1	CECR1GENESET1	CRELD2GENESET1	MICAL3GENESET1	APOL2GENESET1	LIMK2GENESET2	GRAMD4GENESET2	MFNGGENESET2	BIDGENESET2	EIF4ENIF1